{
	"info": {
		"_postman_id": "bedf099a-3fe2-4226-a912-27232335590b",
		"name": "Book Store Nodejs",
		"description": "# ðŸš€ Get started here\n\nThis template guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.\n\n## ðŸ”– **How to use this template**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.\n\nThis collection contains each of these [request](https://learning.postman.com/docs/sending-requests/requests/) types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 3: Send new Body data**\n\nUpdate or add new data in \"Body\" in the POST request. Typically, Body data is also used in PUT request.\n\n```\n{\n    \"name\": \"Add your name in the body\"\n}\n\n ```\n\n#### **Step 4: Update the variable**\n\nVariables enable you to store and reuse values in Postman. We have created a [variable](https://learning.postman.com/docs/sending-requests/variables/) called `base_url` with the sample request [https://postman-api-learner.glitch.me](https://postman-api-learner.glitch.me). Replace it with your API endpoint to customize this collection.\n\n#### **Step 5: Add tests in the \"Tests\" tab**\n\nTests help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the \"Test Results\" tab.\n\n<img src=\"https://content.pstmn.io/b5f280a7-4b09-48ec-857f-0a7ed99d7ef8/U2NyZWVuc2hvdCAyMDIzLTAzLTI3IGF0IDkuNDcuMjggUE0ucG5n\">\n\n## ðŸ’ª Pro tips\n\n- Use folders to group related requests and organize the collection.\n- Add more [scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/) in \"Tests\" to verify if the API works as expected and execute workflows.\n    \n\n## ðŸ’¡Related templates\n\n[API testing basics](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9a37a28-055b-49cd-8c7e-97494a21eb54&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[API documentation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9c28f47-1253-44af-a2f3-20dce4da1f18&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[Authorization methods](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=31a9a6ed-4cdf-4ced-984c-d12c9aec1c27&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "33350052"
	},
	"item": [
		{
			"name": "Book",
			"item": [
				{
					"name": "Get all books",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": "http://localhost:8080/api/book/",
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Get a book",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": "http://localhost:8080/api/book/BXFLU747",
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Create new book",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NjBmNWNkY2VhY2FkOWJjZTg0MmE0MDQiLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE3MTIzMjIxNDMsImV4cCI6MTcxMjQwODU0M30.PLv2b0fK5vVUthAhkHNECZsL--6DKYoBng3OsPfLyjw"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"bookName\": \"SÃ¡ch má»›i\",\r\n    \"bookImage\": \"hinh_anh_sach.jpg\",\r\n    \"bookAuthor\": \"TÃ¡c giáº£ ABC\",\r\n    \"bookPublisher\": \"NhÃ  Xuáº¥t Báº£n ABC\",\r\n    \"bookPrice\": 1000,\r\n    \"bookSold\": 0,\r\n    \"bookStock\": 50,\r\n    \"bookWeight\": 0.5,\r\n    \"bookSize\": \"15x20cm\",\r\n    \"bookIntroduction\": \"Cuá»‘n sÃ¡ch má»›i Ä‘Æ°á»£c thÃªm\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8080/api/book/",
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "Edit book",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NjBmNWNkY2VhY2FkOWJjZTg0MmE0MDQiLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE3MTIzMjIxNDMsImV4cCI6MTcxMjQwODU0M30.PLv2b0fK5vVUthAhkHNECZsL--6DKYoBng3OsPfLyjw"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"bookName\": \"SÃ¡ch má»›i vÃ  Ä‘Æ°á»£c sá»­a\",\r\n    \"bookImage\": \"hinh_anh_sach.jpg\",\r\n    \"bookAuthor\": \"TÃ¡c giáº£ ABC\",\r\n    \"bookPublisher\": \"NhÃ  Xuáº¥t Báº£n ABC\",\r\n    \"bookPrice\": 1000,\r\n    \"bookSold\": 0,\r\n    \"bookStock\": 50,\r\n    \"bookWeight\": 0.5,\r\n    \"bookSize\": \"15x20cm\",\r\n    \"bookIntroduction\": \"Cuá»‘n sÃ¡ch má»›i Ä‘Æ°á»£c thÃªm vÃ  Ä‘Æ°á»£c sá»­a\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8080/api/book/BWLVR392",
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "Upload hinhanh",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NjBjYzU5MWZhZjU3ZTNiNmZiNzk5MzkiLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE3MTIxNDMyMjIsImV4cCI6MTcxMjE0NjgyMn0.mJbv1NldcipffvTVgho0rv4biwLrv6LpyQrj0eyxWbw"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "images",
									"type": "file",
									"src": "/C:/Users/hoang/Desktop/Screenshot_20240401_094217.png"
								}
							]
						},
						"url": "http://localhost:8080/api/book/upload-image/660d34b548d79fa15a68b411",
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "Delete book",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NjBmNWNkY2VhY2FkOWJjZTg0MmE0MDQiLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE3MTIzMjIxNDMsImV4cCI6MTcxMjQwODU0M30.PLv2b0fK5vVUthAhkHNECZsL--6DKYoBng3OsPfLyjw"
							}
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8080/api/book/BWLVR392",
						"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
					},
					"response": []
				}
			]
		},
		{
			"name": "Account",
			"item": [
				{
					"name": "Get all taikhoan",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NjBmNWNkY2VhY2FkOWJjZTg0MmE0MDQiLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE3MTIzMjIxNDMsImV4cCI6MTcxMjQwODU0M30.PLv2b0fK5vVUthAhkHNECZsL--6DKYoBng3OsPfLyjw"
							}
						},
						"method": "GET",
						"header": [],
						"url": "http://localhost:8080/api/account/"
					},
					"response": []
				},
				{
					"name": "Get one account",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NjBmNWNkY2VhY2FkOWJjZTg0MmE0MDQiLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE3MTIzMjIxNDMsImV4cCI6MTcxMjQwODU0M30.PLv2b0fK5vVUthAhkHNECZsL--6DKYoBng3OsPfLyjw"
							}
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"idTaiKhoan\": \"660a59151203d05227ea3619\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8080/api/account/user1"
					},
					"response": []
				},
				{
					"name": "Delete taikhoan",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NjBmNWNkY2VhY2FkOWJjZTg0MmE0MDQiLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE3MTIzMjIxNDMsImV4cCI6MTcxMjQwODU0M30.PLv2b0fK5vVUthAhkHNECZsL--6DKYoBng3OsPfLyjw"
							}
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"tenTaiKhoan\": \"\",\r\n            \"hoTen\":\"\",\r\n            \"soDienThoai\": \"\",\r\n            \"diaChi\":\"\",\r\n            \"isAdmin\": false,\r\n            \"matKhau\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8080/api/account/user1"
					},
					"response": []
				},
				{
					"name": "Update taikhoan",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NjBmNWNkY2VhY2FkOWJjZTg0MmE0MDQiLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE3MTIzMjEyOTEsImV4cCI6MTcxMjQwNzY5MX0.3CxklYrL-QITT6BGlEOAtbUOaMgyJJRecYS2U0o2hXM"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userName\": \"Test1\",\r\n    \"userPhone\": \"\",\r\n    \"userAddress\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8080/api/account/user2"
					},
					"response": []
				},
				{
					"name": "Register",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userID\": \"user1\",\r\n    \"userPassword\": \"1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/account/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"account",
								""
							],
							"query": [
								{
									"key": "idTaiKhoan",
									"value": "660a59151203d05227ea3619",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NjBjYzJlZTJhNWI4OTg0MDNjN2ZiMjQiLCJyb2xlIjoidXNlciIsImlhdCI6MTcxMjEzNjUwOSwiZXhwIjoxNzEyMTQwMTA5fQ.WVL-8Pz5nxRffNR7NYQ-LM6LUwTfrqqlB_6JbVwOHko"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userID\": \"admin\",\r\n    \"userPassword\": \"1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8080/api/account/login"
					},
					"response": []
				},
				{
					"name": "Logout",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NjBmNWNkY2VhY2FkOWJjZTg0MmE0MDQiLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE3MTIzMjE3MTQsImV4cCI6MTcxMjQwODExNH0.M_IkM3vatRVT4bHVLuR5WRj4BBbiJjuHdVVgCmWWMMI"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8080/api/account/logout"
					},
					"response": []
				}
			]
		},
		{
			"name": "Order",
			"item": [
				{
					"name": "Get all orders",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NjBmNWNkY2VhY2FkOWJjZTg0MmE0MDQiLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE3MTIzMjIxNDMsImV4cCI6MTcxMjQwODU0M30.PLv2b0fK5vVUthAhkHNECZsL--6DKYoBng3OsPfLyjw"
							}
						},
						"method": "GET",
						"header": [
							{
								"key": "userId",
								"value": "660cc591faf57e3b6fb79939",
								"type": "text"
							},
							{
								"key": "role",
								"value": "admin",
								"type": "text"
							}
						],
						"url": "http://localhost:8080/api/order/"
					},
					"response": []
				},
				{
					"name": "Get one donghang",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NjBmNWNkY2VhY2FkOWJjZTg0MmE0MDQiLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE3MTIzMjI2MTQsImV4cCI6MTcxMjQwOTAxNH0.EAsBnQXy-GUchP3CZH6UuoercX8JbPHr5lYlXebxMsQ"
							}
						},
						"method": "GET",
						"header": [
							{
								"key": "userId",
								"value": "660cc591faf57e3b6fb79939",
								"type": "text"
							},
							{
								"key": "role",
								"value": "admin",
								"type": "text"
							}
						],
						"url": "http://localhost:8080/api/order/ORCYN789"
					},
					"response": []
				},
				{
					"name": "Create new donhang",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NjBmNWNkY2VhY2FkOWJjZTg0MmE0MDQiLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE3MTIzMjI5NTksImV4cCI6MTcxMjQwOTM1OX0.eboLRB-KJnvyUtM8DGdEAiKy8vLs38hm8YTxDAw89xI"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "userId",
								"value": "660cc591faf57e3b6fb79939",
								"type": "text",
								"disabled": true
							},
							{
								"key": "role",
								"value": "admin",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"orderFirstBook\": \"660f590a535b339571cb7abb\",\r\n  \"orderTotal\": 120000,\r\n  \"orderItemQuantity\": 2,\r\n  \"orderPhone\": \"0123456789\",\r\n  \"orderAddress\": \"371 Nguyá»…n Kiá»‡m, P.3, Q.GÃ² Váº¥p, TP.HCM\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8080/api/order/"
					},
					"response": []
				},
				{
					"name": "Update state donhang",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NjBmNWNkY2VhY2FkOWJjZTg0MmE0MDQiLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE3MTIzMjI5NTksImV4cCI6MTcxMjQwOTM1OX0.eboLRB-KJnvyUtM8DGdEAiKy8vLs38hm8YTxDAw89xI"
							}
						},
						"method": "PUT",
						"header": [
							{
								"key": "userId",
								"value": "660cc591faf57e3b6fb79939",
								"type": "text"
							},
							{
								"key": "role",
								"value": "admin",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"orderStatus\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8080/api/order/OLJOH467"
					},
					"response": []
				}
			]
		},
		{
			"name": "OrderDetail",
			"item": [
				{
					"name": "Get all order detail",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NjBmNWNkY2VhY2FkOWJjZTg0MmE0MDQiLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE3MTIzMjI5NTksImV4cCI6MTcxMjQwOTM1OX0.eboLRB-KJnvyUtM8DGdEAiKy8vLs38hm8YTxDAw89xI"
							}
						},
						"method": "GET",
						"header": [
							{
								"key": "userId",
								"value": "660cc591faf57e3b6fb79939",
								"type": "text"
							},
							{
								"key": "role",
								"value": "admin",
								"type": "text"
							}
						],
						"url": "http://localhost:8080/api/order-detail/"
					},
					"response": []
				},
				{
					"name": "Get one donghang",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NjBmNWNkY2VhY2FkOWJjZTg0MmE0MDQiLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE3MTIzMjI5NTksImV4cCI6MTcxMjQwOTM1OX0.eboLRB-KJnvyUtM8DGdEAiKy8vLs38hm8YTxDAw89xI"
							}
						},
						"method": "GET",
						"header": [
							{
								"key": "userId",
								"value": "660cc591faf57e3b6fb79939",
								"type": "text"
							},
							{
								"key": "role",
								"value": "admin",
								"type": "text"
							}
						],
						"url": "http://localhost:8080/api/order-detail/660f639a535b339571cb7ad4"
					},
					"response": []
				},
				{
					"name": "Create new chitietdonhang",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NjBmNWNkY2VhY2FkOWJjZTg0MmE0MDQiLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE3MTIzMjI5NTksImV4cCI6MTcxMjQwOTM1OX0.eboLRB-KJnvyUtM8DGdEAiKy8vLs38hm8YTxDAw89xI"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "userId",
								"value": "660cc591faf57e3b6fb79939",
								"type": "text"
							},
							{
								"key": "role",
								"value": "admin",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"orderID\": \"660ffa1cfe1bd9196c878e14\",\r\n  \"orderItem\": [\r\n    {\r\n      \"bookID\": \"660f590a535b339571cb7abb\",\r\n      \"quantity\": 1\r\n    },\r\n    {\r\n      \"bookID\": \"660f590a535b339571cb7aba\",\r\n      \"quantity\": 1\r\n    }\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8080/api/order-detail/"
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		}
	]
}